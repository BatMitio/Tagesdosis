@page "/profile/login"
@using Tagesdosis.Gateways.Portal.Services.User
@using Tagesdosis.Gateways.Portal.Blazor.Providers
@using System.ComponentModel.DataAnnotations
@inject IUserService _userService
@inject NavigationManager NavigationManager
@inject TokenAuthenticationStateProvider StateProvider

<AuthorizeView>
    <Authorized>
        <Redirect Url="/"/>
    </Authorized>
</AuthorizeView>
<NotAuthorized>
    <div class="container-fluid">
        <div class="row mh-100vh">
            <div class="col-10 col-sm-8 col-md-6 col-lg-6 offset-1 offset-sm-2 offset-md-3 offset-lg-0 align-self-center d-lg-flex align-items-lg-center align-self-lg-stretch p-5 rounded rounded-lg-0 my-5 my-lg-0 box-style" id="login-block">
                <div class="m-auto w-lg-75 w-xl-50">
                    <h2 class="fw-light mb-5 intro-text">
                        <img class="logo">&nbsp;
                        <strong>
                            <em>Tagesdosis</em>
                        </strong>
                    </h2>
                    <EditForm Model="@DataModel" OnValidSubmit="@HandleFormSubmit">
                        <DataAnnotationsValidator/>
                        <ValidationSummary/>

                        <p class="mt-3 mb-0 error-text">
                            @Message
                        </p>
                        <div class="form-group mb-3">
                            <label class="form-label text-secondary">Username</label>
                            <InputText class="form-control" type="text" inputmode="email" @bind-Value="DataModel.Username"/>
                        </div>
                        <div class="form-group mb-3">
                            <label class="form-label text-secondary">Password</label>
                            <InputText class="form-control" type="password" @bind-Value="DataModel.Password"/>
                        </div>

                        <button class="btn btn-info mt-2 btn-style" type="submit">Log In</button>

                    </EditForm>
                    <br/>

                    <p class="mt-3 mb-0 info-text">
                        <a class="info-text small" href="/profile/signup">Don't have an account? Sign up!</a>
                        <br/>
                        <a class="info-text small" href="#">Forgot your password?</a>
                        <br/>
                    </p>

                </div>
            </div>

            <Background/>
        </div>
    </div>
</NotAuthorized>


@code {

    public class FormData
    {
        [Required]
        public string? Username { get; set; }

        [Required]
        public string? Password { get; set; }
    }

    public FormData DataModel = new FormData();
    public string? Message { get; set; }

    public async void HandleFormSubmit()
    {
        var result = await _userService.CheckPasswordAsync(DataModel.Username!, DataModel.Password!);

        if (result!.IsValid)
        {
            await StateProvider.SetAuthenticationStateAsync(result.Result);
            NavigationManager.NavigateTo("/");
            return;
        }

        InvalidCredentials(result.Errors!);
    }


    private void InvalidCredentials(IEnumerable<string> errors)
    {
        Message = string.Join('\n', errors);
        StateHasChanged();
    }

}