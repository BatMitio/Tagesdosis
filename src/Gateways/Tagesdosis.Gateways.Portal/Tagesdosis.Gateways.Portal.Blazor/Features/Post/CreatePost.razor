@page "/post/create"
@using System.ComponentModel.DataAnnotations
@using Tagesdosis.Gateways.Portal.Blazor.Providers
@using Tagesdosis.Gateways.Portal.Services.Post.Interfaces

@inject IPostService _postService
@inject NavigationManager NavigationManager
@inject TokenAuthenticationStateProvider StateProvider

<AuthorizeView>
    <NotAuthorized>
        <Redirect Url="/profile/login"/>
    </NotAuthorized>

    <Authorized>
        <div class="container-fluid background" id="background">
            <a class="btn btn-link link-primary mb-3 btn-style" role="button" href="services.html">
                <i class="fas fa-arrow-left"></i>&nbsp;Back
            </a>
            <div class="d-sm-flex justify-content-between align-items-center mb-4">
                <h2 class="text-dark mb-0">Create your post</h2>
            </div>
            <EditForm Context="CreatePostFormContext" Model="@DataModel" OnValidSubmit="@HandleFormSubmit">
                <DataAnnotationsValidator/>
                <ValidationSummary/>

                <p class="mt-3 mb-0 error-text">
                    @Message
                </p>

                <div class="card shadow mb-3">
                    <div class="card-header py-3">
                        <p class="text-primary m-0 fw-bold">Please remember to be respectful and mindful of others*</p>
                    </div>
                    <div class="card-body card-style">
                        <div class="row">
                            <div class="col-sm-12 col-md-8 col-lg-8">
                                <div class="mb-3">
                                    <label class="form-label" for="post_title">
                                        <strong>Title</strong>
                                        <br>
                                    </label>
                                    <InputText class="form-control" type="text" id="post_title1" placeholder="" name="post_title1" required="" @bind-Value="DataModel.Title"/>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="post_content">
                                <strong>Content</strong>
                                <br>
                            </label>
                            <InputTextArea class="form-control" id="post_content1" rows="4" name="post_content" required="" @bind-Value="DataModel.Content"></InputTextArea>
                        </div>
                        <div class="row mb-2">
                            <div class="col form-label"></div>
                            <div class="col">
                                <button class="btn btn-primary btn-lg" type="submit">Create post</button>
                                <a class="btn btn-danger btn-lg" role="button" href="services.html">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="text-end mb-3"></div>
            </EditForm>
        </div>
    </Authorized>

</AuthorizeView>

@code {

    public class FormData
    {
        [Required]
        public string? Title { get; set; }

        [Required]
        public string? Content { get; set; }
    }

    public string Message { get; set; }
    private FormData DataModel = new();

    private async void HandleFormSubmit()
    {
        var result = await _postService.CreatePostAsync(DataModel.Title!, DataModel.Content!, await StateProvider.GetTokenAsync());

        if (result.IsValid)
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        PrintError(result.Errors);
    }

    private void PrintError(ICollection<string> resultErrors)
    {
        Message = string.Join("\n", resultErrors);
        StateHasChanged();
    }

}