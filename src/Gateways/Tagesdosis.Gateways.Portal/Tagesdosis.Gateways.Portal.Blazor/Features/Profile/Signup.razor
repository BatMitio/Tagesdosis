@page "/profile/signup"
@using Tagesdosis.Gateways.Portal.Services.User
@using Tagesdosis.Gateways.Portal.Blazor.Providers
@inject NavigationManager NavigationManager
@inject IUserService _userService
@inject TokenAuthenticationStateProvider StateProvider

<div class="container-fluid">
    <div class="row mh-100vh">
        <div class="col-10 col-sm-8 col-md-6 col-lg-6 offset-1 offset-sm-2 offset-md-3 offset-lg-0 align-self-center d-lg-flex align-items-lg-center align-self-lg-stretch p-5 rounded rounded-lg-0 my-5 my-lg-0 box-style" id="login-block">
            <div class="m-auto w-lg-75 w-xl-50">
                <h2 class="fw-light mb-5 intro-text">
                    <img class="logo">&nbsp;
                    <strong>
                        <em>Tagesdosis</em>
                    </strong>
                </h2>
                <form>
                    <div class="form-group mb-3">
                        <label class="form-label text-secondary">Email</label>
                        <input class="form-control" type="text" required="" inputmode="email" @bind="_email">
                        <label class="form-label text-secondary">Username</label>
                        <input class="form-control" type="text" required="" inputmode="email" @bind="_userName">
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label text-secondary">Password</label>
                        <input class="form-control" type="password" required="" @bind="_password">
                    </div>
                </form>
                <button class="btn btn-info mt-2 btn-style" @onclick="OnSignUpButton_Clicked">Sign up</button>
                <p class="mt-3 mb-0">
                    <a class="info-text small" href="#">Already have an account? Log in here!</a>
                </p>
                <p class="mt-3 mb-0 error-text">
                    @Message
                </p>

            </div>
        </div>
        <Background/>
    </div>
</div>

@code {

    private string _userName;
    private string _email;
    private string _password;
    public string Message { get; set; }
    private List<string> _errors = new List<string>();

    private async Task OnSignUpButton_Clicked(MouseEventArgs obj)
    {
        var result = await _userService.CreateAsync(_userName, _email, _password);

        if (!result.IsValid)
            Error(result.Errors);
        else
        {
            var token = await _userService.CheckPasswordAsync(_userName, _password);
            if (token.IsValid)
            {
                await StateProvider.SetAuthenticationStateAsync(token.Result);
                NavigationManager.NavigateTo("/");
                return;
            }
            Error(new[] {"An error occured while trying to log in, please log in manually!"});
        }
    }

    private void Error(IEnumerable<string> errors)
    {
        Message = string.Join('\n', errors);
        StateHasChanged();
    }

}